@model EmpresaModel﻿
@{
    ViewData["Title"] = "Cadastro - Empresa";
}
<link rel="stylesheet" href="~/css/CadastroEmpresa.css" asp-append-version="true" />

<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cadastrar empresa - RedeWork</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@400&display=swap" rel="stylesheet">
</head>



<body class="bg-light">
    <div class="container mt-5">
        <div class="row">

            @if (TempData["MensagemErro"] != null) {
                <div class="alert alert-danger" role="alert">
                    <button type="button" class="btn btn-danger btn-sm close-alert" arial-label"Close">x</button>
                    @TempData["MensagemErro"]
                </div>
            }

            @if (TempData["MensagemSucesso"] != null) {
                <div class="alert alert-success" role="alert">
                    <button type="button" class="btn btn-danger btn-sm close-alert" arial-label"Close">x</button>
                    @TempData["MensagemSucesso"]
                </div>
            }

            <h2 class="text-center" style="color:#5D2CE7;">Cadastro Empresa</h2>
            <p class="text-center">Segurança e Confidencialidade</p>
            <p class="text-center">A RedeWork garante a segurança e a confidencialidade de todas as informações corporativas fornecidas no cadastro.</p>


            <main>
                @using (Html.BeginForm("CadastroEmpresa", "Cadastro", FormMethod.Post)) {
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email)
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @required = "required", placeholder = "Digite o seu e-mail" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(m => m.Usuario)
                        @Html.TextBoxFor(m => m.Usuario, new { @class = "form-control", @required = "required", placeholder = "Digite o nome do usuário" })
                        @Html.ValidationMessageFor(m => m.Usuario, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.RazaoSocial, "Razão Social")
                        @Html.TextBoxFor(m => m.RazaoSocial, new { @class = "form-control", @required = "required", placeholder = "Digite a razão social" })
                        @Html.ValidationMessageFor(m => m.RazaoSocial, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.CNPJ)
                        @Html.TextBoxFor(m => m.CNPJ, new { @class = "form-control", @required = "required", placeholder = "Digite o CNPJ" })
                        @Html.ValidationMessageFor(m => m.CNPJ, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Telefone)
                        @Html.TextBoxFor(m => m.Telefone, new { @class = "form-control", @required = "required", placeholder = "Digite o telefone" })
                        @Html.ValidationMessageFor(m => m.Telefone, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Site)
                        @Html.TextBoxFor(m => m.Site, new { @class = "form-control", @required = "required", placeholder = "Digite o site da empresa" })
                        @Html.ValidationMessageFor(m => m.Site, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Linkedin)
                        @Html.TextBoxFor(m => m.Linkedin, new { @class = "form-control", @required = "required", placeholder = "Digite o perfil do LinkedIn" })
                        @Html.ValidationMessageFor(m => m.Linkedin, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.Estado, "ESTADO")
                            @Html.DropDownListFor(m => m.Estado, new SelectList(new[]
                                     {
                        new { Value = "", Text = "Selecione" },
                        new { Value = "Acre", Text = "Acre" },
                        new { Value = "Alagoas", Text = "Alagoas" },
                        new { Value = "Amapá", Text = "Amapá" },
                        new { Value = "Amazonas", Text = "Amazonas" },
                        new { Value = "Bahia", Text = "Bahia" },
                        new { Value = "Ceará", Text = "Ceará" },
                        new { Value = "Distrito Federal", Text = "Distrito Federal" },
                        new { Value = "Espírito Santo", Text = "Espírito Santo" },
                        new { Value = "Goiás", Text = "Goiás" },
                        new { Value = "Maranhão", Text = "Maranhão" },
                        new { Value = "Mato Grosso", Text = "Mato Grosso" },
                        new { Value = "Mato Grosso do Sul", Text = "Mato Grosso do Sul" },
                        new { Value = "Minas Gerais", Text = "Minas Gerais" },
                        new { Value = "Pará", Text = "Pará" },
                        new { Value = "Paraíba", Text = "Paraíba" },
                        new { Value = "Paraná", Text = "Paraná" },
                        new { Value = "Pernambuco", Text = "Pernambuco" },
                        new { Value = "Piauí", Text = "Piauí" },
                        new { Value = "Rio de Janeiro", Text = "Rio de Janeiro" },
                        new { Value = "Rio Grande do Norte", Text = "Rio Grande do Norte" },
                        new { Value = "Rio Grande do Sul", Text = "Rio Grande do Sul" },
                        new { Value = "Rondônia", Text = "Rondônia" },
                        new { Value = "Roraima", Text = "Roraima" },
                        new { Value = "Santa Catarina", Text = "Santa Catarina" },
                        new { Value = "São Paulo", Text = "São Paulo" },
                        new { Value = "Sergipe", Text = "Sergipe" },
                        new { Value = "Tocantins", Text = "Tocantins" }
                        }, "Value", "Text"), new { @class = "form-control", @required = "required" })
                            @Html.ValidationMessageFor(m => m.Estado, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(m => m.Cidade, "CIDADE")
                            @Html.DropDownListFor(m => m.Cidade, new SelectList(new[]
                                     {
                        new { Value = "", Text = "Selecione" },
                        // Cidades de São Paulo
                        new { Value = "sao-paulo", Text = "São Paulo" },
                        new { Value = "campinas", Text = "Campinas" },
                        new { Value = "santos", Text = "Santos" },
                        new { Value = "ribeirao-preto", Text = "Ribeirão Preto" },
                        new { Value = "rio-de-janeiro", Text = "Rio de Janeiro" },
                        new { Value = "niteroi", Text = "Niterói" },
                        new { Value = "petropolis", Text = "Petrópolis" },
                        new { Value = "belo-horizonte", Text = "Belo Horizonte" },
                        new { Value = "uberlandia", Text = "Uberlândia" },
                        new { Value = "juiz-de-fora", Text = "Juiz de Fora" },
                        new { Value = "salvador", Text = "Salvador" },
                        new { Value = "feira-de-santana", Text = "Feira de Santana" },
                        new { Value = "vitoria-da-conquista", Text = "Vitória da Conquista" },
                        new { Value = "curitiba", Text = "Curitiba" },
                        new { Value = "londrina", Text = "Londrina" },
                        new { Value = "maringa", Text = "Maringá" },
                        new { Value = "porto-alegre", Text = "Porto Alegre" },
                        new { Value = "caxias-do-sul", Text = "Caxias do Sul" },
                        new { Value = "recife", Text = "Recife" },
                        new { Value = "olinda", Text = "Olinda" },
                        new { Value = "fortaleza", Text = "Fortaleza" },
                        new { Value = "juazeiro-do-norte", Text = "Juazeiro do Norte" },
                        new { Value = "sobral", Text = "Sobral" },
                        new { Value = "brasilia", Text = "Brasília" },
                        new { Value = "taguatinga", Text = "Taguatinga" },
                        new { Value = "gama", Text = "Gama" },
                        new { Value = "manaus", Text = "Manaus" },
                        new { Value = "belem", Text = "Belém" },
                        new { Value = "goiania", Text = "Goiânia" },
                        new { Value = "vitoria", Text = "Vitória" }

                        // Outras cidades...
                        }, "Value", "Text"), htmlAttributes: new { @class = "form-control", @required = "required" })
                            @Html.ValidationMessageFor(m => m.Cidade, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.CEP)
                        @Html.TextBoxFor(m => m.CEP, new { @class = "form-control", @required = "required", placeholder = "Digite o CEP", id = "cep" })
                        @Html.ValidationMessageFor(m => m.CEP, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Rua)
                        @Html.TextBoxFor(m => m.Rua, new { @class = "form-control", @required = "required", placeholder = "Digite o nome da rua", id = "rua" })
                        @Html.ValidationMessageFor(m => m.Rua, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Numero)
                        @Html.TextBoxFor(m => m.Numero, new { @class = "form-control", @required = "required", placeholder = "Digite o número" })
                        @Html.ValidationMessageFor(m => m.Numero, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.Senha)
                        @Html.PasswordFor(m => m.Senha, new { @class = "form-control", @required = "required", placeholder = "Informe sua senha" })
                        @Html.ValidationMessageFor(m => m.Senha, "", new { @class = "text-danger" })
                        <span id="senha-error" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(m => m.ConfirmarSenha, "Confirmar senha")
                        @Html.PasswordFor(m => m.ConfirmarSenha, new { @class = "form-control", @required = "required", placeholder = "Confirme a sua senha" })
                        @Html.ValidationMessageFor(m => m.ConfirmarSenha, "", new { @class = "text-danger" })
                        <span id="confirmarSenha-error" class="text-danger"></span>
                        <br />
                        <small class="form-text text-muted">Sua senha deve conter pelo menos 8 caracteres, incluindo números, letras e um caractere especial.</small>
                    </div>

                    <div class="form-group form-check">
                        <input type="checkbox" class="form-check-input" id="aceito" required>
                        <label class="form-check-label" for="aceito">Eu aceito as Condições Legais e a Política de Privacidade.</label>
                    </div>

                    <button type="submit" class="btn btn-primary" id="submit-btn">CADASTRAR-SE</button>

                    <p class="registro text-center mt-3">Você é um estudante? <a asp-action="CadastroEstudante" asp-controller="Cadastro">Cadastre-se aqui.</a></p>
                }
            </main>
        </div>
    </div>


</body>

</html>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Quando o botão com a classe 'close-alert' for clicado
            $('.close-alert').click(function () {
                // Esconde o elemento pai (a div com a mensagem)
                $(this).closest('.alert').fadeOut();
            });
        });
        document.getElementById('cep').addEventListener('blur', function () {
            var cep = this.value.replace(/\D/g, ''); // Remove caracteres não numéricos

            if (cep.length === 8) {
                var url = `https://viacep.com.br/ws/${cep}/json/`;

                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        if (!("erro" in data)) {
                            // Preencher o campo "rua" com o valor retornado
                            document.getElementById('rua').value = data.logradouro;
                        } else {
                            alert('CEP não encontrado.');
                        }
                    })
                    .catch(error => console.log('Erro ao buscar o CEP: ', error));
            } else {
                alert('Por favor, insira um CEP válido.');
            }
        });

        document.querySelector("#submit-btn").addEventListener("click", function (e) {
            var senha = document.querySelector("#Senha").value;
            var confirmarSenha = document.querySelector("#ConfirmarSenha").value;
            var senhaError = document.querySelector("#senha-error");
            var confirmarSenhaError = document.querySelector("#confirmarSenha-error");

            //Limpa a mensagem de erro
            senhaError.textContent = "";
            confirmarSenhaError.textContent = "";

            //Validacao de senha e confirmacao de senha
            if (senha !== confirmarSenha) {
                e.preventDefault(); //impede o envio do formulario
                confirmarSenhaError.textContent = "As senhas não coincidem.";
            }

            //Validacao para verificar se a senha tem pelomenos 8 caracteres
            if (senha.length < 8) {
                e.preventDefault(); // Impede o envio do form
                confirmarSenhaError.textContent = "A senha deve conter no mínimo 8 caracteres.";
            }

        });
    </script>


}

